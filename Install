#!/bin/bash
user=$(whoami)
if [ $user != "root" ] ; then
	echo "This program must be run with root permissions!"
	echo "Terminating..."
	exit 1
fi
destination="/opt/Go-to-Server/"
echo -n "Destination Directory (/opt/Go-to-Server): "
read input
if [ -n "$input" ] ; then
	destination="$input"
fi
lc=$(lp=$((${#destination} - 1));echo ${destination:lp:lp})
if [ "$lc" != "/" ] ; then
	destination="$destination/"
fi
configuration="/etc/opt/Go-to-Server/Configuration"
echo -n "Configuration File ($configuration): "
read input
if [ -n "$input" ] ; then
	last="$input"
fi
loop=1
while [ $loop -eq 1 ]
do
	lc=$(lp=$((${#configuration} - 1));echo ${configuration:lp:1})
	if [ "$lc" = "/" ] ; then
		echo "Invalid file path. Please try again."
		echo -n "Configuration File ($configuration): "
		read input
		if [ -in "$input" ] ; then
			last="$input"
		fi
	else
		loop=0
		if [ -n "$last" ] ; then
			configuration="$last"
		fi
	fi
done
datafile="/etc/opt/Go-to-Server/Server-List"
loop=1
while [ $loop -eq 1 ]
do
	echo -n "Data File ($datafile): "
	read input
	lc=$(lp=$((${#input} - 1));echo ${input:lp:1})
	if [ -n "$input" ] && [ "$lc" = "/" ] ; then
		echo "This is not a valid data file path! Please try again!"
	else
			loop=0
			if [ -n "$input" ] ; then
				datafile="$input"
			fi
	fi
done
variant=2
loop=1
while [ $loop -eq 1 ]
do
	echo "1) Program with Xclip"
	echo "2) Program with Expect"
	echo -n "Program Variant (2): "
	read input
	if [ -z "$input" ] ; then
		input=$variant
	fi
	if [ "$input" = "1" ] || [ "$input" = "2" ] ; then
		loop=0
		if [ -n "$input" ] ; then
			variant=$input
		fi
	else
		echo "Invalid choice. It can be either 1 or 2."
	fi
done
position="$(echo "$destination" | grep -Fob "/"\
	| tail -1 | cut -d ":" -f 1-1)"
ddirectory="${destination:0:position}"
position="$(echo "$configuration" | grep -Fob "/"\
  | tail -1 | cut -d ":" -f 1-1)"
position=$(($position + 1))
cdirectory="${configuration:0:position}"
mkdir -p "$ddirectory"
mkdir -p "$cdirectory"
cp Go-to-Server Go-to-Server-Configured\
	Go-to-Server-with-Expect Parse-Config-File "$ddirectory"
cat Server-List > "$datafile"
echo "DF="$datafile" ## The path to a"\
	"file with server information" > $configuration
echo "VARIANT=$variant ## Variant of the program to run" >> $configuration
content="$(cat "$ddirectory/Go-to-Server-Configured")"
echo "$(echo "#!/bin/bash";echo "DESTINATION=\"$ddirectory\"";\
	echo "CONFIGURATION=\"$configuration\"";echo "$content")"\
	| cat > "$ddirectory/Go-to-Server-Configured"
ln -s "$ddirectory/Go-to-Server-Configured"\
	"/usr/local/bin/Go-to-Server" 2> /dev/null
